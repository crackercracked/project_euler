#include <iostream>
#include <string>
#include <vector>
using namespace std;


/*
  question description
  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

void printVec(vector<int> &vec){
  for (int i=0; i<vec.size(); i++) cout << vec[i] << " ";
  cout << "" << endl;
}

vector<int> fibonacci(int max){
  vector<int> vec;
  vec.push_back(1);
  vec.push_back(2);
  int i=0;
  while(true){
    int num=vec[i]+vec[i+1];
    if (num>max) break;
    else {
      vec.push_back(num);
      i++;
    }
  }
  return vec;
}


int evenSum(vector<int> vec){
  int sum=0;
  for (int i=0; i<vec.size(); i++) {
    if (vec[i]%2==0) sum=sum+vec[i];
  }
  return sum;
}



int main(){
  int k=4000000;
  vector<int> vec=fibonacci(k);
  cout << evenSum(vec) << endl;
  return 0;

}
